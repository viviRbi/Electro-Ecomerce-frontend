{"version":3,"sources":["pages/auth/helper.js","component/Nav/Nav.jsx","core/Layout.js","pages/Home/Home.jsx","pages/auth/Signup/Signup.jsx","pages/auth/Signin/Signin.jsx","pages/auth/Activate/Activate.js","core/Private.js","pages/auth/PrivateRoute.js","core/Admin.js","pages/auth/AdminRoute.js","pages/auth/forgot.js","pages/auth/reset.js","App.js","serviceWorker.js","index.js"],"names":["authenticate","response","func","key","value","console","log","data","token","window","cookie","set","expires","undefined","localStorage","setItem","JSON","stringify","setLocalStorage","user","isAuth","get","getCookie","getItem","parse","signout","next","remove","removeItem","removeLocalStorage","withRouter","history","isActive","path","location","pathname","color","loginPath","role","className","to","style","onClick","push","cursor","name","Layout","children","Home","Signup","useState","email","password","buttonText","values","setValues","handleChange","type","e","target","autoComplete","onChange","preventDefault","axios","method","url","process","then","toast","success","message","catch","error","handleSubmit","Signin","Activate","match","show","useEffect","params","jwt","decode","Private","PrivateRoute","Component","component","rest","render","props","state","from","Admin","AdminRoute","Forgot","forgotPasswordForm","Reset","newPassword","resetPasswordLink","App","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16340650.chunk.js","sourcesContent":["import cookie from 'js-cookie'\n\n// save token in cookies, local storage\nexport const setCookie = (key, value) => {\n  if (window !== 'undefined') {\n    cookie.set(key, value, {\n      expires: 1\n    })\n  }\n}\n//remove from cookies\nexport const removeCookie = (key) => {\n  if (window !== 'undefined') {\n    cookie.remove(key, {\n      expires: 1\n    })\n  }\n}\n//get from cookie\nexport const getCookie = (key) => {\n  if (window !== undefined) {\n    return cookie.get(key)\n  }\n}\n// will be useful when we need to make request to server with token\n//---------------------------------------\n//set in local storage\nexport const setLocalStorage = (key, value) => {\n  if (window !== undefined) {\n    localStorage.setItem(key, JSON.stringify(value))\n  }\n}\n//remove from local storage\nexport const removeLocalStorage = (key) => {\n  if (window !== undefined) {\n    localStorage.removeItem(key)\n  }\n}\n//---------------------------------------\n\n//authenticate user by passing data to cookie and local storage during sign in\n//pass setcookies setLocalStorage function here\nexport const authenticate = (response, func) => {\n  console.log('AUTHENTICATE HELPER RESPONSE OBJ', response)\n  setCookie('token', response.data.token)\n  setLocalStorage('user', response.data.user)\n  func()\n}\n//access user info from local storage\nexport const isAuth = () => {\n  if (window !== 'undefined') {\n    const cookieChecked = getCookie('token')\n    if (cookieChecked) {\n      if (localStorage.getItem('user')) {\n        return JSON.parse(localStorage.getItem('user'))\n      } else {\n        return false\n      }\n    }\n  }\n}\nexport const signout = next => {\n  removeCookie('token')\n  removeLocalStorage('user')\n  next()\n}\n\n","import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { isAuth, signout } from '../../pages/auth/helper'\n\nconst Nav = ({ history }) => {\n  // if the path from params is equal to isActive(path), change color \n  const isActive = path => {\n    if (history.location.pathname === path) {\n      return { color: 'black' }\n    } else {\n      return { color: 'blue' }\n    }\n  }\n  const loginPath = () => {\n    if (isAuth()) {\n      const result = isAuth().role === 'admin' ? \"/admin\" : \"/private\"\n      return result\n    }\n  }\n  return (\n    <ul className=\"nav nav-tabs\">\n      <li className='nav-item'><Link to='/' style={isActive('/')}>Home</Link></li>\n      {isAuth() ?\n        (<>\n          <li className='nav-item'>\n            <Link style={isActive('/no')} onClick={() => {\n              signout(() => { history.push('/') })\n            }}> Sign out</Link></li>\n\n          <li className='nav-item'>\n            <Link to={`${loginPath}`} style={{ cursor: 'pointer' }} style={isActive(`${loginPath}`)}>\n              {isAuth().name}</Link>\n          </li>\n        </>\n        ) :\n        <>\n          <li className='nav-item'><Link to='/signin' style={isActive('/signin')}>Sign in</Link></li>\n          <li className='nav-item'><Link to='/signup' style={isActive('/signup')}>Sign up</Link></li>\n        </>\n      }\n    </ul>\n  )\n}\nexport default withRouter(Nav)","import React from 'react'\nimport Nav from \"../component/Nav/Nav\"\n\nconst Layout = ({ children }) => {\n  return (\n    <div>\n      <Nav />\n      <div className=\"container\">{children}</div>\n    </div>\n  )\n}\nexport default Layout","import React from 'react'\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Home</h1>\n    </div>\n  )\n}\nexport default Home\n\n","import React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport { isAuth } from '../helper'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.min.css'\n\nconst Signup = () => {\n  const [values, setValues] = useState({\n    name: '',\n    email: '',\n    password: '',\n    buttonText: 'Submit'\n  })\n  const { name, email, password, buttonText } = values\n  const handleChange = type => (e) => {\n    setValues({ ...values, [type]: e.target.value })\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setValues({ ...values, buttonText: 'Submitting' })\n    axios({\n      method: 'POST',\n      url: `${process.env.REACT_APP_BACKEND_API}/signup`,\n      data: { name, email, password }\n    })\n      .then(response => {\n        console.log('sign up sucess')\n        setValues({ ...values, name: '', email: '', password: '', buttonText: 'Submited' })\n        toast.success(response.data.message)\n      })\n      .catch(error => {\n        console.log('SIGNUP ERROR', error.response.data.error)\n        setValues({ ...values, buttonText: 'Submit' })\n        toast.error(error.response.data.error)\n      })\n  }\n  const signupForm = () => {\n    return (\n      <form>\n        <div className='form-group'>\n          <label className='text-muted'>Name</label>\n          <input autoComplete='true' onChange={handleChange('name')} type='text' className='form-control' />\n          <label className='text-muted'>Email</label>\n          <input autoComplete='true' onChange={handleChange('email')} type='text' className='form-control' />\n          <label className='text-muted'>Password</label>\n          <input autoComplete='true' onChange={handleChange('password')} type='password' className='form-control' />\n          <button type='submit' className='btn' onClick={e => handleSubmit(e)}>{buttonText}</button>\n        </div>\n      </form>\n    )\n  }\n  return (\n    <div>\n      <ToastContainer />\n      {isAuth() ? <Redirect to='/' /> : null}\n      {/* {JSON.stringify({ name, email, password })} */}\n      <h1>Sign up</h1>\n      {signupForm()}\n    </div>\n  )\n}\n\nexport default Signup","import React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport { authenticate, isAuth } from '../helper'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.min.css'\n\nconst Signin = ({ history }) => {\n  const [values, setValues] = useState({\n    email: '',\n    password: '',\n    buttonText: 'Submit'\n  })\n  const { email, password, buttonText } = values\n  const handleChange = type => (e) => {\n    setValues({ ...values, [type]: e.target.value })\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setValues({ ...values, buttonText: 'Submitting' })\n    axios({\n      method: 'POST',\n      url: `${process.env.REACT_APP_BACKEND_API}/signin`,\n      data: { email, password }\n    })\n      .then(response => {\n        console.log('sign in sucess')\n        // save the response (user, token) in (localStorage, cookies)\n        //local storage: id, name, email, role that sent as json at signin controller\n        authenticate(response, () => {\n          setValues({ ...values, email: '', password: '', buttonText: 'Submited' })\n          // toast.success(`Hey ${response.data.user.name}`)\n          isAuth() && isAuth().role === 'admin' ? history.push('/admin') : history.push('/private')\n        })\n      })\n      .catch(error => {\n        setValues({ ...values, buttonText: 'Submit' })\n      })\n  }\n  const signinForm = () => {\n    return (\n      <form>\n        <div className='form-group'>\n          <label className='text-muted'>Email</label>\n          <input autoComplete='true' onChange={handleChange('email')} type='text' className='form-control' />\n          <label className='text-muted'>Password</label>\n          <input autoComplete='true' onChange={handleChange('password')} type='password' className='form-control' />\n          <button type='submit' className='btn' onClick={e => handleSubmit(e)}>{buttonText}</button>\n        </div>\n      </form>\n    )\n  }\n  return (\n    <div>\n      {/* {JSON.stringify(isAuth())} */}\n      <ToastContainer />\n      {isAuth() ? <Redirect to='/' /> : null}\n      <h1>Sign in</h1>\n      {signinForm()}\n    </div>\n  )\n}\n\nexport default Signin","import React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport jwt from 'jsonwebtoken'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.min.css'\n\nconst Activate = ({ match }) => {\n  const [values, setValues] = useState({\n    name: '',\n    token: '',\n    show: true,\n  })\n  useEffect(() => {\n    let token = match.params.token\n    let { name } = jwt.decode(token)\n    if (token) {\n      setValues({ ...values, name, token })\n    }\n  }, [match.params.token, values])\n  //if don't pass anything inside the array, this function runs everytime state change\n  //if pass name, function runs everytime name change\n\n  const { name, token, show } = values\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    // post token to backend to decode then save new user to database\n    axios({\n      method: 'POST',\n      url: `${process.env.REACT_APP_BACKEND_API}/account-activation`,\n      data: { token }\n    })\n      .then(response => {\n        console.log('ACCOUNT ACTIVATION', response)\n        // save the response (user, token) in (localStorage, cookies)\n        setValues({ ...values, show: false })\n        toast.success(`Hey ${response.data.message}`)\n      })\n      .catch(error => {\n        console.log('ACCOUNT ACTIVATION ERROR', error.response.data)\n        toast.error(error.response.data.error)\n      })\n  }\n  const activationLink = () => (\n    <div className='text-center'>\n      <h1> Hey {name}, ready to activate your account?</h1>\n      <button onClick={handleSubmit}>Activate Account</button>\n    </div>\n  )\n  return (\n    <div>\n      <ToastContainer />\n      {show && activationLink()}\n    </div>\n  )\n}\n\nexport default Activate","import React from 'react'\n\nconst Private = () => (\n  <div>\n    <h1>Private page/ Today's Deals</h1>\n  </div>\n)\nexport default Private","\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuth } from './helper';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest}\n    render={props =>\n      isAuth() ? <Component {...props} /> : (\n        <Redirect\n          to={{ pathname: '/signin', state: { from: props.location } }} />\n      )}></Route>\n);\n\nexport default PrivateRoute;","import React from 'react'\n\nconst Admin = () => (\n  <div>\n    <h1>Admin page</h1>\n  </div>\n)\nexport default Admin","\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuth } from './helper';\n\nconst AdminRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest}\n    render={props =>\n      isAuth() && isAuth().role === 'admin' ? <Component {...props} /> : (\n        <Redirect\n          to={{ pathname: '/signin', state: { from: props.location } }} />\n      )}></Route>\n);\n\nexport default AdminRoute;","import React, { useState } from 'react'\nimport axios from 'axios'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.min.css'\n\nconst Forgot = () => {\n  const [values, setValues] = useState({\n    email: '',\n    buttonText: 'Request'\n  })\n  const { email, buttonText } = values\n  const handleChange = type => (e) => {\n    setValues({ ...values, [type]: e.target.value })\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setValues({ ...values, buttonText: 'Submitting' })\n    axios({\n      method: 'PUT',\n      url: `${process.env.REACT_APP_BACKEND_API}/forgot-password`,\n      data: { email }\n    })\n      .then(response => {\n        console.log('forgot pass sucess')\n        toast.success(response.data.message)\n        setValues({ ...values, buttonText: 'Requested' })\n      })\n      .catch(error => {\n        console.log('forgot pass ERROR', error.response.data.error)\n        setValues({ ...values, buttonText: 'Request' })\n        toast.error(error.response.data.error)\n      })\n  }\n  const forgotPasswordForm = () => {\n    return (\n      <form>\n        <div className='form-group'>\n          <label className='text-muted'>Email</label>\n          <input autoComplete='true' onChange={handleChange('email')} type='text' className='form-control' />\n          <button type='submit' className='btn' onClick={e => handleSubmit(e)}>{buttonText}</button>\n        </div>\n      </form>\n    )\n  }\n  return (\n    <div>\n      <ToastContainer />\n      {/* {JSON.stringify({ name, email, password })} */}\n      {forgotPasswordForm()}\n    </div>\n  )\n}\n\nexport default Forgot","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport jwt from 'jsonwebtoken'\n\nconst Reset = ({ match }) => {\n  const [values, setValues] = useState({\n    name: '',\n    token: '',\n    newPassword: '',\n    buttonText: 'Request'\n  })\n  useEffect(() => {\n    let token = match.params.token\n    let { name } = jwt.decode(token)\n    if (token) {\n      setValues({ ...values, name, token })\n    }\n  }, [match.params.token])\n  const { name, token, newPassword, buttonText } = values\n\n  const handleChange = (e) => {\n    setValues({ ...values, newPassword: e.target.value })\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setValues({ ...values, buttonText: 'Reset' })\n    axios({\n      method: 'PUT',\n      url: `${process.env.REACT_APP_BACKEND_API}/reset-password`,\n      data: { newPassword, resetPasswordLink: token }\n    })\n      .then(response => {\n        console.log('reset pass success')\n        toast.success(response.data.message)\n        setValues({ ...values, buttonText: 'Done' })\n      })\n      .catch(error => {\n        console.log('reset pass ERROR', error.response.data.error)\n        setValues({ ...values, buttonText: 'Reset' })\n        toast.error(error.response.data.error)\n      })\n  }\n  const resetPasswordForm = () => {\n    return (\n      <form>\n        <h1>{name}</h1>\n        <div className='form-group'>\n          <label className='text-muted'>Password</label>\n          <input autoComplete='true' onChange={e => handleChange(e)} type='password' className='form-control' />\n          <button type='submit' className='btn' onClick={e => handleSubmit(e)}>{buttonText}</button>\n        </div>\n      </form>\n    )\n  }\n  return (\n    <div>\n      <ToastContainer />\n      <h1>Reset password</h1>\n      {JSON.stringify({ name, token })}\n      {resetPasswordForm()}\n    </div>\n  )\n}\n\nexport default Reset","import React from 'react'\nimport Layout from './core/Layout'\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './pages/Home/Home'\nimport Signup from './pages/auth/Signup/Signup'\nimport Signin from './pages/auth/Signin/Signin'\nimport Activate from './pages/auth/Activate/Activate'\nimport Private from './core/Private'\nimport PrivateRoute from './pages/auth/PrivateRoute'\nimport Admin from './core/Admin'\nimport AdminRoute from \"./pages/auth/AdminRoute\"\nimport Forgot from './pages/auth/forgot'\nimport Reset from './pages/auth/reset'\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/signup\" component={Signup} />\n        <Route exact path=\"/signin\" component={Signin} />\n        <Route exact path=\"/auth/activate/:token\" component={Activate} />\n        <PrivateRoute exact path=\"/private\" component={Private} />\n        <AdminRoute exact path=\"/admin\" component={Admin} />\n        <Route exact path=\"/auth/password/forgot\" component={Forgot} />\n        <Route exact path=\"/auth/password/reset/:token\" component={Reset} />\n      </Switch>\n    </Layout>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}